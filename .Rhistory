smc_cities_2 <-
san_mateo_cities %>%
st_transform(26910)
saveRDS(smc_cities_2, "smc_cities_2.rds")
gc()
expanded_address_segments_east_sj_210301 <- readRDS("~/GitHub/covid19/scc_cict/expanded_address_segments_east_sj_210301.rds")
View(expanded_address_segments_east_sj_210301)
library(sf)
library(mapview)
mapview(expanded_address_segments_east_sj_210301 %>% st_set_geometry("address_geometry"))
library(censusapi)
Sys.setenv(CENSUSKEY = "30f44d95cb0d8c10acfc57d830d39957dbfe8a39") #insert your own key here
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
library(tidyverse)
Sys.setenv(CENSUSKEY = "30f44d95cb0d8c10acfc57d830d39957dbfe8a39") #insert your own key here
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
View(CA_pop_ages)
version
library(sf)
library(leaflet)
library(tigris)
`options(tigris_use_cache = TRUE)`
options(tigris_use_cache = TRUE)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
library(sf)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
scc_boundary <- counties("CA")
View(scc_boundary)
library(tidyverse)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
points <- st_sample(scc_boundary, 100)
View(points)
points <- st_sample(scc_boundary, 100) |>
as.data.frame()
View(points)
class(points)
points <- st_sample(scc_boundary, 100) |>
as.data.frame() |>
st_as_sf()
class(points)
leaflet() |>
addCircleMarkers(
data = points
)
points <- st_sample(scc_boundary, 100) |>
as.data.frame() |>
st_as_sf() |>
st_set_crs(4269)
leaflet() |>
addCircleMarkers(
data = points
)
View(points)
leaflet() |>
addProviderTiles(provider = providers$carto)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addCircleMarkers(
data = points
)
library(leaflet.extras)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addHeatmap(
data = points
)
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection
cellsize = 500
)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
)
library(stars)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
)
library(raster)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
) |>
as("Raster")
points_transformed <- points |>
st_transform(projection)
points_raster <- scc_raster
for(i in nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
pal <- colorNumeric(
palette = "Reds",
domain = values(points_raster),
na.color = "transparent"
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addRasterImage(
points_raster,
colors = pal,
opacity = 0.5
) %>%
addLegend(
pal = pal,
values = values(points_raster),
title = "Count"
)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 1000
) |>
as("Raster")
points <- st_sample(scc_boundary, 10000) |>
as.data.frame() |>
st_as_sf() |>
st_set_crs(4269)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addCircleMarkers(
data = points
)
points_transformed <- points |>
st_transform(projection)
points_raster <- scc_raster
for(i in nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
for(i in 1:nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
pal <- colorNumeric(
palette = "Reds",
domain = values(points_raster),
na.color = "transparent"
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addRasterImage(
points_raster,
colors = pal,
opacity = 0.5
) %>%
addLegend(
pal = pal,
values = values(points_raster),
title = "Count"
)
data <- readRDS("G:/Shared drives/S22 218Z/Housing (OPA)/Tax History/Stanford_TxH_Tax02_Delivery_20200528/4470001.rds")
View(data)
source("~/.active-rstudio-document", echo=TRUE)
View(data)
library(reticulate)
install.packages("rgee")
library(rgee)
ee_Initialize()
ee_install()
library(reticulate)
reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
library(rgee)
# ee_install()
ee_Initialize()
library(rgee)
# ee_install()
ee_Initialize()
ee_check()
# ee_install()
rgee::ee_install_upgrade()
# library(reticulate)
# reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
library(rgee)
ee_check()
library(reticulate)
reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
# ee_install()
# rgee::ee_install_upgrade()
ee_Initialize()
library(rgee)
# ee_install()
# rgee::ee_install_upgrade()
ee_Initialize()
# library(reticulate)
# reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
library(rgee)
# ee_install()
# rgee::ee_install_upgrade()
ee_Initialize()
ee_check()
# ee_install()
# rgee::ee_install_upgrade()
ee_Initialize()
# ee_install()
# rgee::ee_install_upgrade()
ee_Initialize(user = "douyang1@stanford.edu")
# rgee::ee_install_upgrade()
ee_Initialize(user = "derekouyang@gmail.com")
# rgee::ee_install_upgrade()
ee$Authenticate()
# ee_install()
remotes::install_github("r-spatial/rgee")
remotes::install_github("r-spatial/rgee")
# library(reticulate)
# reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
library(rgee)
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
ee$Authenticate()
ee_check()
# library(reticulate)
# reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
library(rgee)
ee_check()
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
ee$Authenticate()
ee_Initialize(user = "derekouyang@gmail.com")
library(reticulate)
reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
ee_check()
library(rgee)
ee_check()
reticulate::py_config()
reticulate::use_condaenv("rgee", conda = "auto",required = TRUE)
ee_check()
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
ee$Authenticate()
ee_Initialize(drive = T)
rgee::ee_Initialize(drive = T)
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
rgee::ee$Authenticate()
rgee::ee_Initialize(drive = T)
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
rgee::ee$Authenticate()
rgee::ee$Initialize()
library(rgee)
ee_check()
reticulate::py_install('earthengine-api==0.1.316', envname='rgee')
# ee_install()
# remotes::install_github("r-spatial/rgee")
# rgee::ee_install_upgrade()
rgee::ee$Authenticate()
rgee::ee_Initialize(drive=T)
shiny::runApp('GitHub/oce-hubs')
source("~/GitHub/citysystems.github.io/oce/hub_airtable_processing.R", echo=TRUE)
setwd("~/GitHub/citysystems.github.io")
write_csv(data,"oce/hubs_from_airtable.csv")
write_csv(data2,"oce/engagements_from_airtable.csv")
basekey_hub = "appbK3ew6puy9NzFM"
tablekey_engage = "tbl3anzSaDAN6Zv7P"
engage_airtable <- airtable(
base = basekey_hub,
tables = tablekey_engage
)
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <- engage_table
offset <- get_offset(engage_table)
while(!is.null(offset)) {
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <-
tryCatch({
data2 %>%
dplyr::bind_rows(engage_table)
}, error = function(e) {
print(e)
return(data2)
}
)
offset <- get_offset(engage_table)
}
data2 <- data2 %>%
left_join(hub_table %>% select(Hub = id, `Campus Hubs`) %>% st_drop_geometry())
write_csv(data2,"oce/engagements_from_airtable.csv")
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv") %>%
mutate(processed_images = "")
View(engagements)
library(tidyverse)
library(sf)
library(readxl)
library(esri2sf)
library(mapview)
path <- "G:/Shared drives/City Systems/OCCOG/"
ventura_parcels_clean <- readRDS(paste0(path,"ventura_parcels_clean.rds"))
library(mapview)
mapview(ventura_parcels_clean[1:100,])
ventura_parcels_clean[1:100,] %>% mapview()
test <- ventura_parcels_clean[1:100,] %>%
st_as_sf(wkt = "wkt")
mapview(test)
test <- ventura_parcels_clean[1:100,] %>%
st_as_sf(wkt = "wkt") %>%
select(-wkt)
mapview(test)
View(test)
sum(is.na(ventura_parcels_clean$OBJECTID))
la_parcels_raw <- readRDS(paste0(path,"la_parcels_raw.rds"))
la_parcels_raw <- NULL
for(place in la_gateway_names){
print(place)
if(file.exists(paste0("G:/Shared drives/City Systems/OCCOG/",place,".rds"))){
la_parcels_raw <- la_parcels_raw %>%
rbind(readRDS(paste0("G:/Shared drives/City Systems/OCCOG/",place,".rds")))
}
}
la_gateway_names <- c(
"Artesia",
"Bell",
"Bell Gardens",
"Bellflower",
"Cerritos",
"Commerce",
"Compton",
"Cudahy",
"Downey",
"Hawaiian Gardens",
"Huntington Park",
"La Habra Heights",
"La Mirada",
"Lakewood",
"Long Beach",
"Lynwood",
"Maywood",
"Montebello",
"Norwalk",
"Paramount",
"Pico Rivera",
"Santa Fe Springs",
"Signal Hill",
"South Gate",
"Vernon",
"Whittier",
"Unincorporated",
"Avalon",
"Port of Long Beach",
"Industry"
)
la_parcels_raw <- NULL
for(place in la_gateway_names){
print(place)
if(file.exists(paste0("G:/Shared drives/City Systems/OCCOG/",place,".rds"))){
la_parcels_raw <- la_parcels_raw %>%
rbind(readRDS(paste0("G:/Shared drives/City Systems/OCCOG/",place,".rds")))
}
}
la_parcels_raw2 <- la_parcels_raw %>%
st_make_valid() %>%
mutate(parcel_index = row_number())
saveRDS(la_parcels_raw2, paste0(path,"la_parcels_raw.rds"))
law_parcels_raw <- la_parcels_raw2
rm(la_parcels_raw2)
la_raw <- rbind(
read_csv(paste0(path,"SBF abstract/DS04 Part 1 Data Sales.csv")),
read_csv(paste0(path,"SBF abstract/DS04 Part 2 Data Sales.csv")),
read_csv(paste0(path,"SBF abstract/DS04 Part 3 Data Sales.csv"))
)
colnames(la_raw)
View(head(la_raw))
View(ventura_parcels_clean)
ventura_raw <- read_excel(paste0(path,"ventura_assessor.xlsx"))
View(ventura_raw)
View(ventura_parcels_clean)
substr("test CA", nchar("test CA") - 3, nchar("test CA"))
substr("test CA", 1, nchar("test CA") - 3)
la_parcels_raw <- la_parcels_raw
rm(law_parcels_raw)
View(la_parcels_raw)
la_raw_clean <- la_raw %>%
filter(as.numeric(`Situs House No`)>0) %>%
mutate(
Address = paste(
as.numeric(`Situs House No`),
`Street Name`,
substr(`City State`,1,nchar(`City State` - 3))
)
) %>%
rename(APN = AIN)
la_raw_clean <- la_raw %>%
filter(as.numeric(`Situs House No`)>0) %>%
mutate(
Address = paste(
as.numeric(`Situs House No`),
`Street Name`,
substr(`City State`,1,nchar(`City State`) - 3)
)
) %>%
rename(APN = AIN)
sum(is.na(la_raw_clean$Address))
sum(is.na(la_raw_clean$APN))
saveRDS(la_raw_clean, paste0(path,"la_raw_clean.rds"))
la_parcels <- la_raw_clean %>%
left_join(la_parcels_raw)
colnames(la_parcels_raw)
la_raw_clean <- la_raw %>%
filter(as.numeric(`Situs House No`)>0) %>%
mutate(
Address = paste(
as.numeric(`Situs House No`),
`Street Name`,
substr(`City State`,1,nchar(`City State`) - 3)
)
) %>%
rename(APN19 = AIN)
saveRDS(la_raw_clean, paste0(path,"la_raw_clean.rds"))
la_parcels <- la_raw_clean %>%
left_join(la_parcels_raw)
class(la_raw$AIN)
table(nchar(la_raw$AIN))
la_raw_clean <- la_raw %>%
filter(as.numeric(`Situs House No`)>0) %>%
mutate(
Address = paste(
as.numeric(`Situs House No`),
`Street Name`,
substr(`City State`,1,nchar(`City State`) - 3)
),
APN19 = as.character(AIN)
) %>%
select(-AIN)
saveRDS(la_raw_clean, paste0(path,"la_raw_clean.rds"))
la_parcels <- la_raw_clean %>%
left_join(la_parcels_raw)
test <- la_parcels %>%
st_as_sf() %>%
mutate(wkt = st_as_text(geometry))
saveRDS(test, paste0(path,"la_parcels_clean.rds"))
View(head(la_parcels))
sum(st_is_empty(la_parcels))
sum(st_is_empty(la_parcels$geoms))
2209216-1615417
la_parcels <- la_parcels_raw %>%
left_join(la_raw_clean)
sum(st_is_empty(la_parcels$geoms))
test <- la_parcels %>%
st_as_sf() %>%
mutate(wkt = st_as_text(geoms))
saveRDS(test, paste0(path,"la_parcels_clean.rds"))
test[1:1000,] %>% mapview()
