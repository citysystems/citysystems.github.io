library(sf)
library(mapview)
mapview(expanded_address_segments_east_sj_210301 %>% st_set_geometry("address_geometry"))
library(censusapi)
Sys.setenv(CENSUSKEY = "30f44d95cb0d8c10acfc57d830d39957dbfe8a39") #insert your own key here
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
library(tidyverse)
Sys.setenv(CENSUSKEY = "30f44d95cb0d8c10acfc57d830d39957dbfe8a39") #insert your own key here
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
CA_pop_ages <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "zip code tabulation area:*",
regionin = "state:06",
vars = "group(B01003)"
) %>%
select(!c(state,NAME) & !ends_with(c("1EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "pop_count"
)
View(CA_pop_ages)
version
library(sf)
library(leaflet)
library(tigris)
`options(tigris_use_cache = TRUE)`
options(tigris_use_cache = TRUE)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
library(sf)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
scc_boundary <- counties("CA")
View(scc_boundary)
library(tidyverse)
scc_boundary <- counties("CA") |>
filter(NAME == "Santa Clara")
points <- st_sample(scc_boundary, 100)
View(points)
points <- st_sample(scc_boundary, 100) |>
as.data.frame()
View(points)
class(points)
points <- st_sample(scc_boundary, 100) |>
as.data.frame() |>
st_as_sf()
class(points)
leaflet() |>
addCircleMarkers(
data = points
)
points <- st_sample(scc_boundary, 100) |>
as.data.frame() |>
st_as_sf() |>
st_set_crs(4269)
leaflet() |>
addCircleMarkers(
data = points
)
View(points)
leaflet() |>
addProviderTiles(provider = providers$carto)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addCircleMarkers(
data = points
)
library(leaflet.extras)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addHeatmap(
data = points
)
projection <- "+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=ft +no_defs"
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection
cellsize = 500
)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
)
library(stars)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
)
library(raster)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 500
) |>
as("Raster")
points_transformed <- points |>
st_transform(projection)
points_raster <- scc_raster
for(i in nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
pal <- colorNumeric(
palette = "Reds",
domain = values(points_raster),
na.color = "transparent"
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addRasterImage(
points_raster,
colors = pal,
opacity = 0.5
) %>%
addLegend(
pal = pal,
values = values(points_raster),
title = "Count"
)
scc_raster <- scc_boundary |>
transmute(value = 0) |>
st_rasterize() |>
st_warp(
crs = projection,
cellsize = 1000
) |>
as("Raster")
points <- st_sample(scc_boundary, 10000) |>
as.data.frame() |>
st_as_sf() |>
st_set_crs(4269)
leaflet() |>
addProviderTiles(provider = providers$CartoDB.Positron) |>
addCircleMarkers(
data = points
)
points_transformed <- points |>
st_transform(projection)
points_raster <- scc_raster
for(i in nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
for(i in 1:nrow(points)){
if(i%%100==0) print(i)
index <- cellFromXY(scc_raster, points_transformed[i,] %>% st_coordinates())
points_raster[index] <- points_raster[index] + 1
}
pal <- colorNumeric(
palette = "Reds",
domain = values(points_raster),
na.color = "transparent"
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addRasterImage(
points_raster,
colors = pal,
opacity = 0.5
) %>%
addLegend(
pal = pal,
values = values(points_raster),
title = "Count"
)
setwd("~/GitHub/oce/hubs")
load("~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_sheets.Rdata")
View(sheets_library)
sheets_library[[47]]$id
load("~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu/sonomanapa_sheets.Rdata")
sheets_library[[47]]$id
sheets_library[[47]]$name
load("~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu/sonomanapa_sheets.Rdata")
sheets_library[[47]]$name
sheets_library[[47]]$id
shiny::runApp('~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu')
install.packages("htmltools")
install.packages("htmltools")
shiny::runApp('~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu')
#gs4_deauth()
gs4_auth(path = "token.json")
load("sonomanapa_sheets.Rdata")
setwd("~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu")
load("sonomanapa_sheets.Rdata")
#gs4_deauth()
gs4_auth(path = "token.json")
load("zones.Rdata")
lookup_key_url <- "https://docs.google.com/spreadsheets/d/155p-WEYPeoa6M6D6d-HOJqfe4xskOZWwGLFZ9KFJtvU/edit#gid=0"
sonoma_landuse_url <- "https://docs.google.com/spreadsheets/d/1KhTroEN58g5rUV7WNYJjrnvlt6anpRyrICIswMCJqSU/edit?usp=sharing"
napa_landuse_url <- "https://docs.google.com/spreadsheets/d/1MrR_q7_K830CycUt8BGG15OgDklMxDjK851hRtsi0SE/edit?usp=sharing"
addresses <- addresses %>% as.data.frame()
View(addresses)
knitr::opts_chunk$set(echo = TRUE)
#4/5/22
addresses <- addresses %>%
mutate(
address = address %>%
gsub("ROWELN","ROWENA LN",.)
)
save(addresses, citylist,  sheets_library,file="C:/Users/derek/Google Drive/City Systems/Sonoma Napa/sonomanapa_sheets.Rdata")
save(addresses, citylist,  sheets_library,file="sonomanapa_sheets.Rdata")
save(addresses, citylist,  sheets_library,file="~/GitHub/adu_dashboard/sonomanapa_dashboard/sonomanapa_adu/sonomanapa_sheets.Rdata")
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
library(readr)
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
View(data)
source("~/GitHub/citysystems.github.io/oce/hub_airtable_processing.R", echo=TRUE)
View(data)
View(hub_table)
hub_table <-
data1 %>%
filter(`Filtered View` == TRUE) %>%
rename("Campus Hubs" = `Campus Hub`) %>%
filter(`Campus Hubs` != "Exclude from hub mapping") %>%
mutate(
firstcoord = round(as.numeric(sub(",.*", "", latlong)),3),
secondcoord = round(as.numeric(sub(".*, ", "", latlong)),3),
latlong = paste0(firstcoord,", ",secondcoord)
) %>%
dplyr::select(-firstcoord,-secondcoord) %>%
separate(
latlong,
into = c("lat","lng"),
sep = ","
) %>%
st_as_sf(coords = c("lng","lat"), crs = 4326) %>%
mutate(
school_official = "",
`Director Name (new)` = "",
`Other Point of Contact Name (new)` = "",
`Other Email (new)` = ""
)
View(hub_table)
for(i in 1:nrow(hub_table)){
schools <- unlist(hub_table$`School or Vice Provostial area (VP)`[i])
school_list <- NULL
for(j in 1:length(schools)){
transform <- schools[j]
school_list <- paste0(school_list,", ",transform)
}
school_list <- substr(school_list,3,nchar(school_list))
hub_table$school_official[i] <- school_list
}
for(i in 1:nrow(hub_table)){
impacts <- unlist(hub_table$`Impact Area`[i])
impact_list <- NULL
for(j in 1:length(impacts)){
impact_list <- paste0(impact_list,", ",impacts[j])
}
impact_list <- substr(impact_list,3,nchar(impact_list))
hub_table$Impact[i] <- impact_list
}
for(i in 1:nrow(hub_table)){
others <- unlist(hub_table$`Other Point of Contact Name (for dashboard)`[i])
other_emails <- unlist(hub_table$`Email (from Other point of contact)`[i])
poc_list <- NULL
if(!is.null(other_emails)){
for(j in 1:length(others)){
poc_list <- paste0(poc_list,", ",others[j]," (",other_emails[j],")")
}
poc_list <- substr(poc_list,3,nchar(poc_list))
for(j in 1:length(others)){
poc_list <- str_replace(poc_list," ,",",")
}
}
if(!is.null(poc_list)){
hub_table$`Other Point of Contact Name (new)`[i] <- poc_list
}else{
hub_table$`Other Point of Contact Name (new)`[i] <- NA
}
}
for(i in 1:nrow(hub_table)){
mains <- unlist(hub_table$`Director Name (for dashboard)`[i])
mains_profile <- unlist(hub_table$`faculty profile`[i])
mains_list <- NULL
if(length(mains > 0)){
for(j in 1:length(mains)){
if(!is.na(mains_profile[[1]])){
if(!is.na(mains_profile[j])){
mains_list <- paste0(mains_list,", <a href = ",mains_profile[j],">",mains[j],"</a>")
}else{
mains_list <- paste0(mains_list,", ",mains[j])
}
}else{
mains_list <- paste0(mains_list,", ",mains[j])
}
}
mains_list <- substr(mains_list,3,nchar(mains_list))
for(j in 1:length(mains)){
mains_list <- str_replace(mains_list," ,",",")
}
hub_table$`Director Name (new)`[i] <- ifelse(mains_list == ", ", NA, mains_list)
}
}
selectable_hubs <-
data %>%
filter(grepl(paste("Arts & Humanities"), school_official))
data$school_official %>% unique()
selectable_hubs <-
data %>%
filter(grepl(paste("Arts & Humanities"), Impact))
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
View(data)
data <-
hub_table %>%
arrange(`Campus Hubs`) %>%
mutate(
Logo = case_when(
grepl(".jpg",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ Logo
),
`Featured Photo` = case_when(
grepl(".jpg",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ `Featured Photo`
),
Logo = ifelse(
is.na(Logo),
Logo,
Logo %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
`Featured Photo` = ifelse(
is.na(`Featured Photo`),
`Featured Photo`,
`Featured Photo` %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
geometry = st_as_text(geometry)
)
setwd("~/GitHub/citysystems.github.io")
data <-
hub_table %>%
arrange(`Campus Hubs`) %>%
mutate(
Logo = case_when(
grepl(".jpg",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ Logo
),
`Featured Photo` = case_when(
grepl(".jpg",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ `Featured Photo`
),
Logo = ifelse(
is.na(Logo),
Logo,
Logo %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
`Featured Photo` = ifelse(
is.na(`Featured Photo`),
`Featured Photo`,
`Featured Photo` %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
geometry = st_as_text(geometry)
)
write_csv(data,"oce/hubs_from_airtable.csv")
View(data)
write_csv(data,"oce/hubs_from_airtable.csv")
unique(data$Impact)
hub_table <-
data1 %>%
filter(`Filtered View` == TRUE) %>%
rename("Campus Hubs" = `Campus Hub`) %>%
filter(`Campus Hubs` != "Exclude from hub mapping") %>%
mutate(
firstcoord = round(as.numeric(sub(",.*", "", latlong)),3),
secondcoord = round(as.numeric(sub(".*, ", "", latlong)),3),
latlong = paste0(firstcoord,", ",secondcoord)
) %>%
dplyr::select(-firstcoord,-secondcoord) %>%
separate(
latlong,
into = c("lat","lng"),
sep = ","
) %>%
st_as_sf(coords = c("lng","lat"), crs = 4326) %>%
mutate(
school_official = "",
`Director Name (new)` = "",
`Other Point of Contact Name (new)` = "",
`Other Email (new)` = ""
)
class(hub_table$`School or Vice Provostial area (VP)`)
for(i in 1:nrow(hub_table)){
schools <- unlist(hub_table$`School or Vice Provostial area (VP)`[i])
school_list <- NULL
for(j in 1:length(schools)){
transform <- schools[j]
school_list <- paste0(school_list,", ",transform)
}
school_list <- substr(school_list,3,nchar(school_list))
hub_table$school_official[i] <- school_list
}
class(hub_table$school_official)
for(i in 1:nrow(hub_table)){
impacts <- unlist(hub_table$`Impact Area`[i])
impact_list <- NULL
for(j in 1:length(impacts)){
impact_list <- paste0(impact_list,", ",impacts[j])
}
impact_list <- substr(impact_list,3,nchar(impact_list))
hub_table$Impact[i] <- impact_list
}
class(hub_table$Impact)
hub_table$Impact <- hub_table$Impact %>% unlist()
class(hub_table$Impact)
View(hub_table)
data <-
hub_table %>%
arrange(`Campus Hubs`) %>%
mutate(
Logo = case_when(
grepl(".jpg",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",Logo) ~ paste0("https",str_match(Logo, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ Logo
),
`Featured Photo` = case_when(
grepl(".jpg",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*jpg")[,2],"jpg"),
grepl(".png",`Featured Photo`) ~ paste0("https",str_match(`Featured Photo`, "https\\s*(.*?)\\s*png")[,2],"png"),
TRUE ~ `Featured Photo`
),
Logo = ifelse(
is.na(Logo),
Logo,
Logo %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
`Featured Photo` = ifelse(
is.na(`Featured Photo`),
`Featured Photo`,
`Featured Photo` %>% gsub(".*\\(","",.) %>% gsub(")","",.)
),
geometry = st_as_text(geometry)
)
write_csv(data,"oce/hubs_from_airtable.csv")
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
data$Impact
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
data$Impact
data <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/hubs_from_airtable.csv") %>%
st_as_sf(wkt = "geometry")
data$Impact
library(esri2sf)
epa_zoning <- esri2sf("https://services8.arcgis.com/0IC8hha3hgQkmGoa/arcgis/rest/services/EastPaloAltoZoning_2021_WFL1/FeatureServer/1")
View(epa_zoning)
tax <- readRDS("G:/Shared drives/S22 218Z/Housing (OPA)/taxca.rds")
View(tax)
View(head(tax))
test <- read_delim("G:/Shared drives/CoreLogic Tax Data 2019/StanfordUniversity_TAX_201906_GU.zip", delim = "|")
test <- read_delim("G:/Shared drives/CoreLogic Tax Data 2019/StanfordUniversity_TAX_201906_GU.zip", delim = "|")
test <- read_delim("G:/Shared drives/CoreLogic Tax Data 2019/StanfordUniversity_TAX_201906_GU.zip", delim = "|")
View(test)
test <- read_delim("G:/Shared drives/CoreLogic Tax Data 2019/StanfordUniversity_TAX_201906_CA.zip", delim = "|")
saveRDS(test, "G:/Shared drives/S22 218Z/Housing (OPA)/taxca_derek.rds")
tax_epa <- test %>% mutate(APN = `FORMATTED APN` %>% gsub("-","",.) %>% substr(1,9)) %>%
filter(APN %in% epa_zoning$APN)
saveRDS(tax_epa, "G:/Shared drives/S22 218Z/Housing (OPA)/tax_epa_apn.rds")
rm(tax)
View(head(test))
tax_smc <- test %>% filter(`FIPS CODE` == "06081")
saveRDS(tax_smc, "G:/Shared drives/S22 218Z/Housing (OPA)/tax_smc.rds")
tax_bay <- test %>% filter(`FIPS CODE` %in% c("06081","06001","06085","06075","06013","06041","06055","06097","06095"))
saveRDS(tax_bay, "G:/Shared drives/S22 218Z/Housing (OPA)/tax_bay.rds")
rm(test)
View(head(tax_bay))
