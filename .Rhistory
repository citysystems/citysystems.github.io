dplyr::select(name) %>%
mutate(hierarchy = name, type = "country")
View(countries_mod)
places_mod <-
places %>%
dplyr::select(name,county,state) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = paste0(name,", ",county,", ",state,", United States")) %>%
dplyr::select(name,hierarchy)
View(places_mod)
counties <- readRDS("~/GitHub/citysystems.github.io/oce/counties.rds")
View(counties)
counties_mod <-
counties %>%
# st_set_geometry(NULL) %>%
left_join(
states %>%
st_drop_geometry(NULL),
by = "STATEFP"
) %>%
mutate(hierarchy = paste0(name,", ",state,", United States")) %>%
dplyr::select(name,hierarchy)
states <- readRDS("~/GitHub/citysystems.github.io/oce/states.rds")
counties_mod <-
counties %>%
# st_set_geometry(NULL) %>%
left_join(
states %>%
st_drop_geometry(NULL),
by = "STATEFP"
) %>%
mutate(hierarchy = paste0(name,", ",state,", United States")) %>%
dplyr::select(name,hierarchy)
View(counties_mod)
state_mod <-
states %>%
dplyr::select(state) %>%
# st_set_geometry(NULL) %>%
rename("name" = "state") %>%
mutate(hierarchy = paste0(name,", ","United States")) %>%
dplyr::select(name,hierarchy)
regions_mod <-
regions %>%
dplyr::select(name) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = paste0(name))
View(regions_mod)
mapview(regions)
regions[2,] %>% mapview()
regions_mod <-
regions %>%
dplyr::select(name) %>%
filter(!name %in%  c("Monterey Bay Area", "Peninsula")) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = ifelse(
name == "Bay Area",
"Bay Area, California, United States",
name
))
regions_mod <-
regions %>%
dplyr::select(name) %>%
filter(!name %in%  c("Monterey Bay Area", "Peninsula")) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = ifelse(
name == "Bay Area",
"Bay Area, California, United States",
name
)) %>%
mutate(name = ifelse(
name == "EU",
"European Union",
name
)) %>%
mutate(hierarchy = ifelse(
name == "European Union",
"European Union",
hierarchy
))
all_locations <-
countries_mod %>%
rbind(state_mod) %>%
rbind(counties_mod) %>%
rbind(places_mod) %>%
rbind(regions_mod) %>%
arrange(hierarchy)
places_mod <-
places %>%
dplyr::select(name,county,state) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = paste0(name,", ",county,", ",state,", United States")) %>%
mutate(type = "place") %>%
dplyr::select(name,hierarchy, type)
counties_mod <-
counties %>%
# st_set_geometry(NULL) %>%
left_join(
states %>%
st_drop_geometry(NULL),
by = "STATEFP"
) %>%
mutate(hierarchy = paste0(name,", ",state,", United States")) %>%
mutate(type = "county") %>%
dplyr::select(name,hierarchy, type)
state_mod <-
states %>%
dplyr::select(state) %>%
# st_set_geometry(NULL) %>%
rename("name" = "state") %>%
mutate(hierarchy = paste0(name,", ","United States")) %>%
mutate(type = "state") %>%
dplyr::select(name,hierarchy, type)
regions_mod <-
regions %>%
dplyr::select(name) %>%
filter(!name %in%  c("Monterey Bay Area", "Peninsula")) %>%
# st_set_geometry(NULL) %>%
mutate(hierarchy = ifelse(
name == "Bay Area",
"Bay Area, California, United States",
name
)) %>%
mutate(name = ifelse(
name == "EU",
"European Union",
name
)) %>%
mutate(hierarchy = ifelse(
name == "European Union",
"European Union",
hierarchy
)) %>%
mutate(type = "region")
all_locations <-
countries_mod %>%
rbind(state_mod) %>%
rbind(counties_mod) %>%
rbind(places_mod) %>%
rbind(regions_mod) %>%
arrange(hierarchy)
names(countries_mod)
names(state_mod)
names(places_mod)
names(regions_mod)
names(counties_mod)
countries_mod <-
countries %>%
dplyr::select(name) %>%
rename(geometry = geom) %>%
mutate(hierarchy = name, type = "country")
all_locations <-
countries_mod %>%
rbind(state_mod) %>%
rbind(counties_mod) %>%
rbind(places_mod) %>%
rbind(regions_mod) %>%
arrange(hierarchy)
View(all_locations)
all_locations <-
countries_mod %>%
rbind(state_mod) %>%
rbind(counties_mod) %>%
rbind(places_mod) %>%
rbind(regions_mod) %>%
arrange(hierarchy) %>%
mutate(index = row_number())
saveRDS(all_locations, "all_locations.rds")
basekey_contact = "appbK3ew6puy9NzFM"
tablekey_contact = "tbl5xktbbcikzqDgr"
location_airtable <- airtable(
base = basekey_contact,
tables = tablekey_contact
)
location_table <- location_airtable$tbl5xktbbcikzqDgr$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data1 <- location_table
offset <- get_offset(location_table)
while(!is.null(offset)) {
location_table <- location_airtable$tbl5xktbbcikzqDgr$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data1 <-
tryCatch({
data1 %>%
dplyr::bind_rows(location_table)
}, error = function(e) {
print(e)
return(data1)
}
)
offset <- get_offset(location_table)
}
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy"))
View(airtable_locations)
test <- all_locations %>%
filter(duplicated(hierarchy))
View(test)
test2 <- all_locations %>%
filter(hierarchy %in% test$hierarchy)
View(test2)
all_locations <-
countries_mod %>%
rbind(state_mod) %>%
rbind(counties_mod) %>%
rbind(places_mod) %>%
rbind(regions_mod) %>%
arrange(hierarchy) %>%
filter(!duplicated(hierarchy)) %>%
mutate(index = row_number())
saveRDS(all_locations, "all_locations.rds")
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy"))
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy")) %>%
select(location, hierarchy, index)
names(data1)
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy")) %>%
select(`Location Name`, `Location Hierarchy`, index)
View(airtable_locations)
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy")) %>%
select(`Location Name`, `Location Hierarchy`, index) %>%
arrange(`Location Hierarchy`)
View(airtable_locations)
test <- airtable_locations %>%
filter(is.na(index))
View(test)
location_airtable <- airtable(
base = basekey_contact,
tables = tablekey_contact
)
location_table <- location_airtable$tbl5xktbbcikzqDgr$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data1 <- location_table
offset <- get_offset(location_table)
while(!is.null(offset)) {
location_table <- location_airtable$tbl5xktbbcikzqDgr$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data1 <-
tryCatch({
data1 %>%
dplyr::bind_rows(location_table)
}, error = function(e) {
print(e)
return(data1)
}
)
offset <- get_offset(location_table)
}
airtable_locations <- data1 %>%
left_join(all_locations, by = c("Location Hierarchy" = "hierarchy")) %>%
select(`Location Name`, `Location Hierarchy`, index) %>%
arrange(`Location Hierarchy`)
test <- airtable_locations %>%
filter(is.na(index))
write.table(airtable_locations,"clipboard",sep = "\t",row.names=F)
write.table(airtable_locations[1:2000,],"clipboard",sep = "\t",row.names=F)
write.table(airtable_locations[1:1000,],"clipboard",sep = "\t",row.names=F)
write.table(airtable_locations[1:500,],"clipboard",sep = "\t",row.names=F)
write.table(airtable_locations[1:1000,3],"clipboard",sep = "\t",row.names=F)
?write.table
write.table(airtable_locations[1001:4988,3],"clipboard",sep = "\t",row.names=F)
basekey_hub = "appbK3ew6puy9NzFM"
tablekey_engage = "tbl3anzSaDAN6Zv7P"
engage_airtable <- airtable(
base = basekey_hub,
tables = tablekey_engage
)
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <- engage_table
offset <- get_offset(engage_table)
while(!is.null(offset)) {
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <-
tryCatch({
data2 %>%
dplyr::bind_rows(engage_table)
}, error = function(e) {
print(e)
return(data2)
}
)
offset <- get_offset(engage_table)
}
for(i in 1:nrow(data2)){
location <- unlist(data2$`Location Name (from Lo)`[i]) %>%
sort() %>%
paste(collapse = ", ")
location_hierarchy <- unlist(data2$`Location Hierarchy (from Location Link)`[i]) %>%
sort() %>%
paste(collapse = ", ")
if(!is.null(location)){
data2$location[i] <- location
data2$location_hierarchy[i] <- location_hierarchy
}else{
data2$location[i] <- NA
data2$location_hierarchy[i] <- NA
}
}
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <- engage_table
offset <- get_offset(engage_table)
while(!is.null(offset)) {
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <-
tryCatch({
data2 %>%
dplyr::bind_rows(engage_table)
}, error = function(e) {
print(e)
return(data2)
}
)
offset <- get_offset(engage_table)
}
for(i in 1:nrow(data2)){
location <- unlist(data2$`Location Name (from Lo)`[i]) %>%
sort() %>%
paste(collapse = ", ")
index <- unlist(data2$`index (from Location Link)`[i]) %>%
sort() %>%
paste(collapse = ", ")
if(!is.null(location)){
data2$location[i] <- location
data2$index[i] <- index
}else{
data2$location[i] <- NA
data2$index[i] <- NA
}
}
data2 <- data2 %>%
select(-`Location Link`, -`Location Name (from Lo)`, -`index (from Location Link)`) %>%
mutate(Text = Text %>% gsub("=<|= <","=",.) %>% gsub("> target"," target",.)) %>%
left_join(hub_table %>% select(Hub = id, `Campus Hubs`) %>% st_drop_geometry())
new_locations <- data2 %>%
filter(!is.na(index))
temp_locations <- readRDS("all_locations.rds") %>%
filter(index %in% new_locations$index)
View(temp_locations)
saveRDS(temp_locations, "location_geo.rds")
location_geo <- readRDS("https://github.com/citysystems/citysystems.github.io/raw/master/oce/location_geo.rds")
location_geo <- readRDS("https://github.com/citysystems/citysystems.github.io/raw/master/oce/location_geo.rds")
location_geo <- readRDS("https://github.com/citysystems/citysystems.github.io/blob/master/oce/location_geo.rds?raw=true")
location_geo <- readRDS("https://github.com/citysystems/citysystems.github.io/blob/master/oce/location_geo.rds?raw=true", wb = T)
?readRDS
location_geo <- readRDS("https://github.com/citysystems/citysystems.github.io/blob/master/oce/location_geo.rds?raw=true")
names(temp_locations)
temp_locations <- readRDS("all_locations.rds") %>%
filter(index %in% new_locations$index) %>%
mutate(wkt = st_as_text(geometry))
View(temp_locations)
temp_locations <- readRDS("all_locations.rds") %>%
filter(index %in% new_locations$index) %>%
mutate(wkt = st_as_text(geometry, digits = 9)) %>%
st_drop_geometry()
saveRDS(temp_locations, "location_geo.rds")
write_csv(temp_locations, "location_geo.csv")
location_geo <- read_csv("https://github.com/citysystems/citysystems.github.io/blob/master/oce/location_geo.csv")
View(location_geo)
location_geo <- read_csv("https://github.com/citysystems/citysystems.github.io/blob/master/oce/location_geo.csv")
location_geo <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/location_geo.csv")
View(location_geo)
location_geo <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/location_geo.csv") %>%
st_as_sf(wkt = "wkt", crs = 4326)
mapview(location_geo)
location_geo <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/location_geo.csv") %>%
st_as_sf(wkt = "wkt", crs = 4269)
mapview(location_geo)
View(location_geo)
location_geo <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/location_geo.csv")
location_geo <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/location_geo.csv") %>%
st_as_sf(wkt = "wkt", crs = 4269)
location_geo[1,] %>% mapview()
engagements$index
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv") %>%
mutate(processed_images = "")
engagements$index
View(data2)
setwd("~/GitHub/citysystems.github.io")
write_csv(data2,"oce/engagements_from_airtable.csv")
names(engagements)
runApp('~/GitHub/oce-hubs')
runApp('~/GitHub/oce-hubs')
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv") %>%
mutate(processed_images = "")
View(engagements)
basekey_hub = "appbK3ew6puy9NzFM"
tablekey_engage = "tbl3anzSaDAN6Zv7P"
engage_airtable <- airtable(
base = basekey_hub,
tables = tablekey_engage
)
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <- engage_table
offset <- get_offset(engage_table)
while(!is.null(offset)) {
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <-
tryCatch({
data2 %>%
dplyr::bind_rows(engage_table)
}, error = function(e) {
print(e)
return(data2)
}
)
offset <- get_offset(engage_table)
}
for(i in 1:nrow(data2)){
location <- unlist(data2$`Location Name (from Lo)`[i]) %>%
sort() %>%
paste(collapse = ", ")
index <- unlist(data2$`index (from Location Link)`[i]) %>%
sort() %>%
paste(collapse = ", ")
if(!is.null(location)){
data2$location[i] <- location
data2$index[i] <- index
}else{
data2$location[i] <- NA
data2$index[i] <- NA
}
}
data2 <- data2 %>%
select(-`Location Link`, -`Location Name (from Lo)`, -`index (from Location Link)`) %>%
mutate(Text = Text %>% gsub("=<|= <","=",.) %>% gsub("> target"," target",.)) %>%
left_join(hub_table %>% select(Hub = id, `Campus Hubs`) %>% st_drop_geometry())
View(data2)
write_csv(data2,"oce/engagements_from_airtable.csv")
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv") %>%
mutate(processed_images = "")
View(engagements)
View(data2)
setwd("~/GitHub/citysystems.github.io")
write_csv(data2,"oce/engagements_from_airtable.csv")
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv")
engagements$index
write_csv(data2,"oce/engagements_from_airtable.csv")
data2$index
class(data2$index)
class(data2$location)
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select() %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <- engage_table
offset <- get_offset(engage_table)
while(!is.null(offset)) {
engage_table <- engage_airtable$tbl3anzSaDAN6Zv7P$select(offset = offset) %>%
mutate(across(where(is.list), ~ sapply(., unlist)))
data2 <-
tryCatch({
data2 %>%
dplyr::bind_rows(engage_table)
}, error = function(e) {
print(e)
return(data2)
}
)
offset <- get_offset(engage_table)
}
for(i in 1:nrow(data2)){
location <- unlist(data2$`Location Name (from Lo)`[i]) %>%
sort() %>%
paste(collapse = ", ")
index <- unlist(data2$`index (from Location Link)`[i]) %>%
sort() %>%
paste(collapse = ", ")
if(!is.null(location)){
data2$location[i] <- location
data2$index[i] <- index
}else{
data2$location[i] <- NA
data2$index[i] <- NA
}
}
class(data2$index)
class(data2$index)
data2 <- data2 %>%
select(-`Location Link`, -`Location Name (from Lo)`, -`index (from Location Link)`) %>%
mutate(Text = Text %>% gsub("=<|= <","=",.) %>% gsub("> target"," target",.)) %>%
mutate(index = unlist(index)) %>%
left_join(hub_table %>% select(Hub = id, `Campus Hubs`) %>% st_drop_geometry())
View(data2)
class(data2$index)
write_csv(data2,"oce/engagements_from_airtable.csv")
engagements <- read_csv("https://raw.githubusercontent.com/citysystems/citysystems.github.io/master/oce/engagements_from_airtable.csv") %>%
mutate(processed_images = "")
View(engagements)
runApp('~/GitHub/oce-hubs')
location_geo$index
?removeShape
runApp('~/GitHub/oce-hubs')
engagement_marker <- engagement_location %>%
filter(type == "place") %>%
rbind(engagement_polygon %>% st_centroid())
?flyToBounds
names(engagements)
names(location_geo)
runApp('~/GitHub/oce-hubs')
runApp()
runApp('~/GitHub/oce-hubs')
runApp('~/GitHub/oce-hubs')
names(engagement_location)
names(location_geo)
runApp('~/GitHub/oce-hubs')
runApp('~/GitHub/oce-hubs')
